Advanced Select
--Occupation


SELECT CONCAT(NAME, '(',LEFT(OCCUPATION,1),')') AS NAME
FROM OCCUPATIONS
ORDER BY NAME;

SELECT CONCAT('There are a total of ', COUNT(OCCUPATION), ' ', LOWER(OCCUPATION),'s.') AS TOTAL
FROM OCCUPATIONS
GROUP BY OCCUPATION
ORDER BY TOTAL;



--

PIVOT

SELECT
    [Doctor], [Professor], [Singer], [Actor]
FROM 
    (
    SELECT ROW_NUMBER() OVER
        (PARTITION BY OCCUPATION 
         ORDER BY NAME) AS [RowNumber], * 
    FROM OCCUPATIONS
    ) AS tempTable
PIVOT
    (
    MAX(NAME) FOR OCCUPATION IN ([Doctor], [Professor], [Singer], [Actor])
    ) AS pivotTable;
    
--

REPLACE
CAST AS FLOAT
AVG
CEILING
    
SELECT CAST(CEILING((AVG(CAST(Salary AS Float)) - AVG(CAST(REPLACE(Salary, 0, '')AS Float)))) AS INT)
FROM EMPLOYEES;

--


TO SELECT TOP 1 

SELECT MAX(MONTHS * SALARY), COUNT(MONTHS * SALARY)
FROM EMPLOYEE
WHERE (MONTHS * SALARY) IN 
    (SELECT MAX(MONTHS * SALARY)
    FROM EMPLOYEE)

--

CAST AS DECIMAL (10,2) WITH 2 DECIMAL PLACES - USE THIS WHEN ROUND() DOES NOT WORK

SELECT CAST(SUM(LAT_N) AS DECIMAL(10,2)) AS lat, 
    CAST(SUM(LONG_W) AS DECIMAL(10,2)) as lon
FROM STATION



CAST AS DECIMAL (10,2) WITH 2 DECIMAL PLACES - USE THIS WHEN TRUNCATE() DOES NOT WORK

SELECT CAST(SUM(LAT_N) AS DECIMAL(10,4))
FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345


SELECT CAST(MAX(LAT_N) AS DECIMAL (10,4)) 2. FIND MAX LAT_N THAT IS < 137.2345
FROM STATION
WHERE LAT_N IN
    (SELECT LAT_N --- 1. SUBQUERY TO FIND OUT LAT_N VALUES < 137.2345
    FROM STATION
    WHERE LAT_N < 137.2345)
    
    
ABS -- CONVERT INTO POSITIVE INTEGER
    
SELECT ABS(CAST(((MIN(LAT_N) - MAX(LAT_N)) + (MIN(LONG_W) - MAX(LONG_W))) AS DECIMAL (10,4)))
FROM STATION


POWER


SELECT
    CAST(SQRT(
        POWER(MAX(LAT_N)  - MIN(LAT_N),  2)
      + POWER(MAX(LONG_W) - MIN(LONG_W), 2)
    ) AS DECIMAL (10,4))
FROM 
    STATION;
